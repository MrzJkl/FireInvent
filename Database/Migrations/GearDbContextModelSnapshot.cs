// <auto-generated />
using System;
using FlameGuardLaundry.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FlameGuardLaundry.Database.Migrations;

[DbContext(typeof(GearDbContext))]
partial class GearDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.5")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("DepartmentPerson", b =>
            {
                b.Property<Guid>("DepartmentsId")
                    .HasColumnType("uuid");

                b.Property<Guid>("PersonsId")
                    .HasColumnType("uuid");

                b.HasKey("DepartmentsId", "PersonsId");

                b.HasIndex("PersonsId");

                b.ToTable("DepartmentPerson");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingItem", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<int>("Condition")
                    .HasColumnType("integer");

                b.Property<string>("Identifier")
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<DateTime>("PurchaseDate")
                    .HasColumnType("timestamp with time zone");

                b.Property<DateTime?>("RetirementDate")
                    .HasColumnType("timestamp with time zone");

                b.Property<Guid?>("StorageLocationId")
                    .HasColumnType("uuid");

                b.Property<Guid>("VariantId")
                    .HasColumnType("uuid");

                b.HasKey("Id");

                b.HasIndex("Identifier")
                    .IsUnique();

                b.HasIndex("StorageLocationId");

                b.HasIndex("VariantId");

                b.ToTable("ClothingItems");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingItemAssignmentHistory", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<DateTime>("AssignedFrom")
                    .HasColumnType("timestamp with time zone");

                b.Property<DateTime?>("AssignedUntil")
                    .HasColumnType("timestamp with time zone");

                b.Property<Guid>("ItemId")
                    .HasColumnType("uuid");

                b.Property<Guid>("PersonId")
                    .HasColumnType("uuid");

                b.HasKey("Id");

                b.HasIndex("PersonId");

                b.HasIndex("ItemId", "AssignedFrom")
                    .IsUnique();

                b.ToTable("ClothingItemAssignmentHistory");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingProduct", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<string>("Description")
                    .HasMaxLength(2000)
                    .HasColumnType("character varying(2000)");

                b.Property<string>("Manufacturer")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<int>("Type")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("Manufacturer");

                b.HasIndex("Name");

                b.HasIndex("Name", "Manufacturer")
                    .IsUnique();

                b.ToTable("ClothingProducts");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingVariant", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<string>("AdditionalSpecs")
                    .HasMaxLength(2000)
                    .HasColumnType("character varying(2000)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<Guid>("ProductId")
                    .HasColumnType("uuid");

                b.HasKey("Id");

                b.HasIndex("Name");

                b.HasIndex("ProductId", "Name")
                    .IsUnique();

                b.ToTable("ClothingVariants");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.Department", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<string>("Description")
                    .HasMaxLength(2000)
                    .HasColumnType("character varying(2000)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("Departments");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.Maintenance", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<Guid>("ItemId")
                    .HasColumnType("uuid");

                b.Property<int>("MaintenanceType")
                    .HasColumnType("integer");

                b.Property<DateTime>("Performed")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Remarks")
                    .HasMaxLength(2000)
                    .HasColumnType("character varying(2000)");

                b.HasKey("Id");

                b.HasIndex("ItemId");

                b.ToTable("Maintenances");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.Person", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<string>("ContactInfo")
                    .HasMaxLength(2000)
                    .HasColumnType("character varying(2000)");

                b.Property<string>("ExternalId")
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<string>("Remarks")
                    .HasMaxLength(2000)
                    .HasColumnType("character varying(2000)");

                b.HasKey("Id");

                b.HasIndex("ExternalId")
                    .IsUnique();

                b.HasIndex("FirstName");

                b.HasIndex("LastName");

                b.HasIndex("FirstName", "LastName")
                    .IsUnique();

                b.ToTable("Persons");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.StorageLocation", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("character varying(255)");

                b.Property<string>("Remarks")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("StorageLocations");
            });

        modelBuilder.Entity("DepartmentPerson", b =>
            {
                b.HasOne("FlameGuardLaundry.Database.Models.Department", null)
                    .WithMany()
                    .HasForeignKey("DepartmentsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("FlameGuardLaundry.Database.Models.Person", null)
                    .WithMany()
                    .HasForeignKey("PersonsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingItem", b =>
            {
                b.HasOne("FlameGuardLaundry.Database.Models.StorageLocation", "StorageLocation")
                    .WithMany("StoredItems")
                    .HasForeignKey("StorageLocationId");

                b.HasOne("FlameGuardLaundry.Database.Models.ClothingVariant", "Variant")
                    .WithMany("Items")
                    .HasForeignKey("VariantId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("StorageLocation");

                b.Navigation("Variant");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingItemAssignmentHistory", b =>
            {
                b.HasOne("FlameGuardLaundry.Database.Models.ClothingItem", "Item")
                    .WithMany("Assignments")
                    .HasForeignKey("ItemId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("FlameGuardLaundry.Database.Models.Person", "Person")
                    .WithMany("AssignedItems")
                    .HasForeignKey("PersonId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Item");

                b.Navigation("Person");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingVariant", b =>
            {
                b.HasOne("FlameGuardLaundry.Database.Models.ClothingProduct", "Product")
                    .WithMany("Variants")
                    .HasForeignKey("ProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Product");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.Maintenance", b =>
            {
                b.HasOne("FlameGuardLaundry.Database.Models.ClothingItem", "Item")
                    .WithMany("Maintenances")
                    .HasForeignKey("ItemId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Item");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingItem", b =>
            {
                b.Navigation("Assignments");

                b.Navigation("Maintenances");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingProduct", b =>
            {
                b.Navigation("Variants");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.ClothingVariant", b =>
            {
                b.Navigation("Items");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.Person", b =>
            {
                b.Navigation("AssignedItems");
            });

        modelBuilder.Entity("FlameGuardLaundry.Database.Models.StorageLocation", b =>
            {
                b.Navigation("StoredItems");
            });
#pragma warning restore 612, 618
    }
}
